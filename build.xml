<project name="zf2-demo" default="help" basedir=".">
    <import file="./vendor/continuousphp/aws-sdk-phing/tasks.xml" />
    <property name="aws.profile" value="" />
    
    <if>
        <isset property="continuousphp.pr" />
        <then>
            <echo message="Switching to PR stack" />
            <property name="cf.filteredStackName"
                      value="${cf.stackName}-${continuousphp.pr}" />
        </then>
        <else>
            <property name="cf.filteredStackName"
                      value="${cf.stackName}" />
        </else>
    </if>
    
    <target name="help" description="List available targets">
        <exec executable="vendor/bin/phing"
              passthru="true">
            <arg value="-l"/>
        </exec>
    </target>
    
    <target name="setup-aws">
        <aws-config region="${aws.region}" profile="${aws.profile}" />
    </target>

    <target name="run-stack">
        <if>
            <equals arg1="single-server" arg2="${cf.template}" />
            <then>
                <aws-cf-runstack
                    name="demo-${cf.filteredStackName}"
                    updateOnConflict="true"
                    capabilities="CAPABILITY_IAM"
                    templatePath="./infra/${cf.template}.template">
                    <param name="KeyName" value="${cf.KeyName}" />
                    <param name="env" value="${cf.filteredStackName}" />
                </aws-cf-runstack>
            </then>
            <else>
                <aws-cf-runstack
                    name="demo-${cf.filteredStackName}"
                    updateOnConflict="true"
                    capabilities="CAPABILITY_IAM"
                    templatePath="./infra/${cf.template}.template">
                    <param name="KeyName" value="${cf.KeyName}" />
                    <param name="DBName" value="${cf.DBName}" />
                    <param name="DBUser" value="${cf.DBUser}" />
                    <param name="DBPassword" value="${cf.DBPassword}" />
                    <param name="env" value="${cf.filteredStackName}" />
                    <output name="AutoscalingGroup" property="deploy.autoScalingGroup" />
                </aws-cf-runstack>
            </else>
        </if>
    </target>
    
    <target name="setup-deployment-group">
        <if>
            <equals arg1="single-server" arg2="${cf.template}" />
            <then>
                <aws-deploy-deployment-group
                    name="${cf.filteredStackName}"
                    updateOnConflict="true"
                    deploymentConfigName="CodeDeployDefault.OneAtATime"
                    serviceRole="${deploy.serviceRole}"
                    application="${deploy.applicationName}">
                    <ec2TagFilter key="env" value="${cf.filteredStackName}" />
                </aws-deploy-deployment-group>
            </then>
            <else>
                <aws-deploy-deployment-group
                    name="${cf.filteredStackName}"
                    updateOnConflict="true"
                    deploymentConfigName="CodeDeployDefault.OneAtATime"
                    serviceRole="${deploy.serviceRole}"
                    application="${deploy.applicationName}">
                    <autoScalingGroup name="${deploy.autoScalingGroup}" />
                </aws-deploy-deployment-group>
            </else>
        </if>
    </target>

    <target name="link-docroot" description="Link site document root to Apache document root">
        <symlink link="${server.docroot}" target="${project.basedir}/public" />
    </target>
    
    <target name="provision-stack"
            description="Provision a stack on AWS"
            depends="setup-aws, run-stack, setup-deployment-group" />
</project>